import{S as Tn,i as Wn,s as zn,e as p,t as l,k as g,w as c,c as f,a as u,h as r,d as t,m as y,x as $,b as E,g as s,M as i,y as m,q as h,o as b,B as w}from"../../../chunks/index-9cb557dd.js";import"../../../chunks/scroll-f06ca868.js";import{C as An}from"../../../chunks/CodeFence-5d76eda7.js";import{C as k}from"../../../chunks/CodeInline-793a3cb8.js";import{L as I}from"../../../chunks/Link-28c9e4a5.js";/* empty css                                                            */import"../../../chunks/singletons-e07d0660.js";import"../../../chunks/contexts-8ab591a1.js";function Ln(_){let o;return{c(){o=l("#")},l(n){o=r(n,"#")},m(n,d){s(n,o,d)},d(n){n&&t(o)}}}function Hn(_){let o;return{c(){o=l("this PR")},l(n){o=r(n,"this PR")},m(n,d){s(n,o,d)},d(n){n&&t(o)}}}function Mn(_){let o;return{c(){o=l("a quickstart that includes the above-mentioned steps")},l(n){o=r(n,"a quickstart that includes the above-mentioned steps")},m(n,d){s(n,o,d)},d(n){n&&t(o)}}}function Nn(_){let o;return{c(){o=l("#")},l(n){o=r(n,"#")},m(n,d){s(n,o,d)},d(n){n&&t(o)}}}function Rn(_){let o;return{c(){o=l("#")},l(n){o=r(n,"#")},m(n,d){s(n,o,d)},d(n){n&&t(o)}}}function Un(_){let o;return{c(){o=l("Account Center")},l(n){o=r(n,"Account Center")},m(n,d){s(n,o,d)},d(n){n&&t(o)}}}function qn(_){let o;return{c(){o=l("#")},l(n){o=r(n,"#")},m(n,d){s(n,o,d)},d(n){n&&t(o)}}}function Dn(_){let o;return{c(){o=l("#")},l(n){o=r(n,"#")},m(n,d){s(n,o,d)},d(n){n&&t(o)}}}function jn(_){let o;return{c(){o=l("a comprehensive React Hooks guide")},l(n){o=r(n,"a comprehensive React Hooks guide")},m(n,d){s(n,o,d)},d(n){n&&t(o)}}}function Fn(_){let o;return{c(){o=l("#")},l(n){o=r(n,"#")},m(n,d){s(n,o,d)},d(n){n&&t(o)}}}function Yn(_){let o;return{c(){o=l("#")},l(n){o=r(n,"#")},m(n,d){s(n,o,d)},d(n){n&&t(o)}}}function Gn(_){let o;return{c(){o=l("community-support discord channel")},l(n){o=r(n,"community-support discord channel")},m(n,d){s(n,o,d)},d(n){n&&t(o)}}}function Vn(_){let o;return{c(){o=l("create a PR or issue on GitHub")},l(n){o=r(n,"create a PR or issue on GitHub")},m(n,d){s(n,o,d)},d(n){n&&t(o)}}}function Bn(_){let o,n,d,xe,yt,Xe,W,j,_t,Je,Pe,kt,Ke,A,se,vt,le,Et,Ot,qe,It,Ct,re,xt,ie,Pt,Qe,v,St,F,At,pe,Tt,fe,Wt,Y,zt,et,z,G,Lt,tt,V,Ht,ue,Mt,nt,L,B,Nt,at,C,Rt,Z,Ut,de,qt,ce,Dt,ot,$e,Se,jt,st,H,X,Ft,lt,x,Yt,me,Gt,he,Vt,be,Bt,rt,Ae,we,it,Te,Zt,pt,M,J,Xt,ft,We,Jt,ut,N,ge,Kt,K,Qt,dt,ye,_e,en,ct,R,Q,tn,$t,T,nn,ke,an,ve,on,mt,Ee,ze,sn,ht,U,ee,ln,bt,Le,rn,wt,P,De,pn,fn,je,un,dn,Fe,cn,$n,q,mn,te,hn,ne,bn,gt;return j=new I({props:{class:"header-anchor",href:"#background","aria-hidden":"true",$$slots:{default:[Ln]},$$scope:{ctx:_}}}),le=new k({props:{code:"npm i @web3-onboard/core"}}),ie=new k({props:{code:"await onboard.connectWallet()"}}),F=new I({props:{href:"https://github.com/blocknative/react-demo/pull/160/files",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Hn]},$$scope:{ctx:_}}}),pe=new k({props:{code:"App.js"}}),fe=new k({props:{code:"services.js"}}),Y=new I({props:{href:"https://docs.blocknative.com/onboard#quickstart",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Mn]},$$scope:{ctx:_}}}),G=new I({props:{class:"header-anchor",href:"#package-upgrade-modularization","aria-hidden":"true",$$slots:{default:[Nn]},$$scope:{ctx:_}}}),ue=new k({props:{code:"npm i @web3-onboard/core @web3-onboard/injected-wallets @web3-onboard/coinbase"}}),B=new I({props:{class:"header-anchor",href:"#expansive-initialization-options","aria-hidden":"true",$$slots:{default:[Rn]},$$scope:{ctx:_}}}),Z=new I({props:{href:"https://www.blocknative.com/blog/multichain-and-multiwallet-account-management-on-your-dapp-with-account-center",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Un]},$$scope:{ctx:_}}}),de=new k({props:{code:"wallets"}}),ce=new k({props:{code:"chains"}}),$e=new An({props:{lang:"text",ext:"text",linesCount:12,code:`<pre><code><span class="line"><span style="color: undefined">const onboard = Onboard({</span></span>
<span class="line"><span style="color: undefined"> wallets: [injected, coinbase],</span></span>
<span class="line"><span style="color: undefined"> chains: [</span></span>
<span class="line"><span style="color: undefined">   {</span></span>
<span class="line"><span style="color: undefined">     id: &#39;0x1&#39;,</span></span>
<span class="line"><span style="color: undefined">     token: &#39;ETH&#39;,</span></span>
<span class="line"><span style="color: undefined">     label: &#39;Ethereum Mainnet&#39;,</span></span>
<span class="line"><span style="color: undefined">     rpcUrl: MAINNET_RPC_URL</span></span>
<span class="line"><span style="color: undefined">   }</span></span>
<span class="line"><span style="color: undefined"> ]</span></span>
<span class="line"><span style="color: undefined">})</span></span>
<span class="line"><span style="color: undefined"></span></span></code></pre>`}}),X=new I({props:{class:"header-anchor",href:"#api-upgrades","aria-hidden":"true",$$slots:{default:[qn]},$$scope:{ctx:_}}}),me=new k({props:{code:"walletSelect"}}),he=new k({props:{code:"walletCheck"}}),be=new k({props:{code:"await onboard.walletSelect(); await onboard.walletCheck();"}}),we=new k({props:{code:"await onboard.connectWallet()"}}),J=new I({props:{class:"header-anchor",href:"#framework-support","aria-hidden":"true",$$slots:{default:[Dn]},$$scope:{ctx:_}}}),ge=new k({props:{code:"@web3-onboard/react"}}),K=new I({props:{href:"https://www.blocknative.com/blog/react-hooks-ethereum",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[jn]},$$scope:{ctx:_}}}),_e=new k({props:{code:"@web3-onboard/vue"}}),Q=new I({props:{class:"header-anchor",href:"#css-customizations","aria-hidden":"true",$$slots:{default:[Fn]},$$scope:{ctx:_}}}),ke=new k({props:{code:".bn-onboard-custom"}}),ve=new k({props:{code:":root"}}),Ee=new An({props:{lang:"text",ext:"text",linesCount:18,code:`<pre><code><span class="line"><span style="color: undefined">:root {</span></span>
<span class="line"><span style="color: undefined"> /* CUSTOMIZE THE COLOR  PALLETTE */</span></span>
<span class="line"><span style="color: undefined"> --onboard-success-100: #d1fae3;</span></span>
<span class="line"><span style="color: undefined"> /* CUSTOMIZE ACCOUNT CENTER*/</span></span>
<span class="line"><span style="color: undefined"> --account-center-z-index: 30</span></span>
<span class="line"><span style="color: undefined">/* CUSTOMIZE THE SHARED MODAL */</span></span>
<span class="line"><span style="color: undefined"> --onboard-modal-color: #ffe5e6;</span></span>
<span class="line"><span style="color: undefined"> /* CUSTOMIZE THE CONNECT MODAL */</span></span>
<span class="line"><span style="color: undefined"> --onboard-font-size-1: 3rem;</span></span>
<span class="line"><span style="color: undefined"> /* HD WALLET ACCOUNT SELECT MODAL POSITIONING */</span></span>
<span class="line"><span style="color: undefined"> --onboard-account-select-modal-z-index : 1;</span></span>
<span class="line"><span style="color: undefined">/* COLORS */</span></span>
<span class="line"><span style="color: undefined"> --account-select-modal-primary-100: #eff1fc;</span></span>
<span class="line"><span style="color: undefined"> /* SPACING */</span></span>
<span class="line"><span style="color: undefined"> --account-select-modal-margin-5: 0.5rem;</span></span>
<span class="line"><span style="color: undefined">/* AND MANY MORE ALLOWING COMPLETE CUSTOMIZATION OF YOUR ONBOARDING EXPERIENCE */</span></span>
<span class="line"><span style="color: undefined">}</span></span>
<span class="line"><span style="color: undefined"></span></span></code></pre>`}}),ee=new I({props:{class:"header-anchor",href:"#other-important-changes","aria-hidden":"true",$$slots:{default:[Yn]},$$scope:{ctx:_}}}),te=new I({props:{href:"https://discord.com/channels/542403978693050389/542406894677917699",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Gn]},$$scope:{ctx:_}}}),ne=new I({props:{href:"https://github.com/blocknative/web3-onboard/issues/new/choose",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Vn]},$$scope:{ctx:_}}}),{c(){o=p("h1"),n=l("Migration Guide"),d=g(),xe=p("p"),yt=l("How to easily migrate from onboard.js to web3-onboard"),Xe=g(),W=p("h3"),c(j.$$.fragment),_t=l(" Background"),Je=g(),Pe=p("p"),kt=l(`With Web3-Onboard, we\u2019ve introduced significant architectural changes that providea more robust and efficient web3 onboarding experience. While this upgrade may result in breaking changes, the improved overall experience makes it worthwhile.
If you have bnc-onboard installed, you will need to install web3-onboard instead. The basic steps you need to take to get started are:`),Ke=g(),A=p("ol"),se=p("li"),vt=l("Install "),c(le.$$.fragment),Et=l(". You can then go ahead and install other specific wallet modules you want."),Ot=g(),qe=p("li"),It=l("Initialize Onboard with the wallets you\u2019ve installed along with the networks you would like to support."),Ct=g(),re=p("li"),xt=l("Make use of our API actions like "),c(ie.$$.fragment),Pt=l(" to allow a user to connect their wallets."),Qe=g(),v=p("p"),St=l("For a full code overview of the upgrade process using the React Hooks package please see "),c(F.$$.fragment),At=l(" with special attention to the "),c(pe.$$.fragment),Tt=l(" and "),c(fe.$$.fragment),Wt=l(` files.
To help you get started quickly on any framework you're using, we\u2019ve put together `),c(Y.$$.fragment),zt=l("."),et=g(),z=p("h3"),c(G.$$.fragment),Lt=l(" Package Upgrade - Modularization"),tt=g(),V=p("p"),Ht=l(`This is the biggest change you might experience as an onboard.js user. With Web3-Onboard, we\u2019ve separated all supported wallets into their modules, meaning you only need to integrate specific wallet modules you intend to support in your app.
For example with Onboard, if you wanted to support only Metamask and Coinbase in your app, you had to install Onboard complete with all other wallets: npm install bnc-onboard
With Web3-Onboard, you only need to install core along with the desired wallet modules: `),c(ue.$$.fragment),Mt=l(`
This change allows us to support many web3 wallets without affecting the overall library performance.`),nt=g(),L=p("h3"),c(B.$$.fragment),Nt=l(" Expansive Initialization Options"),at=g(),C=p("p"),Rt=l("We\u2019ve made initialization simpler while introducing more powerful options like "),c(Z.$$.fragment),Ut=l(` and Notify in web3-onboard.
Onboard now requires two compulsory initial setup options: `),c(de.$$.fragment),qt=l(" (Wallet modules, as shown above, to be initialized and added to wallet selection modal) and "),c(ce.$$.fragment),Dt=l(" (EVM networks your app should work with). You can also pass multiple wallets and chains."),ot=g(),c($e.$$.fragment),Se=p("p"),jt=l("You can find the full list of initialization options in our docs here."),st=g(),H=p("h3"),c(X.$$.fragment),Ft=l(" API Upgrades"),lt=g(),x=p("p"),Yt=l("We've also added a number of API enhancements to help you create an onboarding experience faster. For example, previously, you had to call "),c(me.$$.fragment),Gt=l(" and "),c(he.$$.fragment),Vt=l(" API to get a user connected: "),c(be.$$.fragment),Bt=l(`
Now, you only need to call the connectWallet API:`),rt=g(),Ae=p("p"),c(we.$$.fragment),it=g(),Te=p("p"),Zt=l("Learn more about state changes tracked with the Onboard API here and the exposed actions you can use to modify the state here."),pt=g(),M=p("h3"),c(J.$$.fragment),Xt=l(" Framework Support"),ft=g(),We=p("p"),Jt=l("Although Onboard is still framework-agnostic, we\u2019ve introduced a couple of framework-specific modules that are frequently asked for by our users."),ut=g(),N=p("p"),c(ge.$$.fragment),Kt=l(" - React Hooks to connect users to web3 dApps better. You can check out "),c(K.$$.fragment),Qt=l(" we've written on that."),dt=g(),ye=p("p"),c(_e.$$.fragment),en=l(" - A set of reusable functions for integrating Web3-Onboard into a Vue 3 project. This is also compatible with a Vue 2 + composition-api dapp."),ct=g(),R=p("h3"),c(Q.$$.fragment),tn=l(" CSS Customizations"),$t=g(),T=p("p"),nn=l("We've also added more expansive custom CSS properties so you can style every part of your onboarding experience to match the overall experience of your dApp. To apply Web3-Onboard CSS customizations, you don't need to attach them to the "),c(ke.$$.fragment),an=l(" class like before. Instead, you can simply place them in the "),c(ve.$$.fragment),on=l(" CSS pseudo-class, as shown below:"),mt=g(),c(Ee.$$.fragment),ze=p("p"),sn=l("The full list of CSS variables for web3-onboard are available here."),ht=g(),U=p("h3"),c(ee.$$.fragment),ln=l(" Other Important Changes"),bt=g(),Le=p("p"),rn=l("There are also other notable infrastructural changes in Web3-Onboard:"),wt=g(),P=p("ul"),De=p("li"),pn=l("Dynamic Imports of dependencies"),fn=g(),je=p("li"),un=l("Wallet Provider Standardization"),dn=g(),Fe=p("li"),cn=l("Support for Chain ID in decimal format"),$n=g(),q=p("li"),mn=l("If you have questions or requests, please feel free to drop by the "),c(te.$$.fragment),hn=l(" or "),c(ne.$$.fragment),bn=l("."),this.h()},l(e){o=f(e,"H1",{});var a=u(o);n=r(a,"Migration Guide"),a.forEach(t),d=y(e),xe=f(e,"P",{});var Ye=u(xe);yt=r(Ye,"How to easily migrate from onboard.js to web3-onboard"),Ye.forEach(t),Xe=y(e),W=f(e,"H3",{id:!0,tabindex:!0});var He=u(W);$(j.$$.fragment,He),_t=r(He," Background"),He.forEach(t),Je=y(e),Pe=f(e,"P",{});var Ge=u(Pe);kt=r(Ge,`With Web3-Onboard, we\u2019ve introduced significant architectural changes that providea more robust and efficient web3 onboarding experience. While this upgrade may result in breaking changes, the improved overall experience makes it worthwhile.
If you have bnc-onboard installed, you will need to install web3-onboard instead. The basic steps you need to take to get started are:`),Ge.forEach(t),Ke=y(e),A=f(e,"OL",{});var D=u(A);se=f(D,"LI",{});var Oe=u(se);vt=r(Oe,"Install "),$(le.$$.fragment,Oe),Et=r(Oe,". You can then go ahead and install other specific wallet modules you want."),Oe.forEach(t),Ot=y(D),qe=f(D,"LI",{});var Ve=u(qe);It=r(Ve,"Initialize Onboard with the wallets you\u2019ve installed along with the networks you would like to support."),Ve.forEach(t),Ct=y(D),re=f(D,"LI",{});var Ie=u(re);xt=r(Ie,"Make use of our API actions like "),$(ie.$$.fragment,Ie),Pt=r(Ie," to allow a user to connect their wallets."),Ie.forEach(t),D.forEach(t),Qe=y(e),v=f(e,"P",{});var O=u(v);St=r(O,"For a full code overview of the upgrade process using the React Hooks package please see "),$(F.$$.fragment,O),At=r(O," with special attention to the "),$(pe.$$.fragment,O),Tt=r(O," and "),$(fe.$$.fragment,O),Wt=r(O,` files.
To help you get started quickly on any framework you're using, we\u2019ve put together `),$(Y.$$.fragment,O),zt=r(O,"."),O.forEach(t),et=y(e),z=f(e,"H3",{id:!0,tabindex:!0});var Me=u(z);$(G.$$.fragment,Me),Lt=r(Me," Package Upgrade - Modularization"),Me.forEach(t),tt=y(e),V=f(e,"P",{});var Ce=u(V);Ht=r(Ce,`This is the biggest change you might experience as an onboard.js user. With Web3-Onboard, we\u2019ve separated all supported wallets into their modules, meaning you only need to integrate specific wallet modules you intend to support in your app.
For example with Onboard, if you wanted to support only Metamask and Coinbase in your app, you had to install Onboard complete with all other wallets: npm install bnc-onboard
With Web3-Onboard, you only need to install core along with the desired wallet modules: `),$(ue.$$.fragment,Ce),Mt=r(Ce,`
This change allows us to support many web3 wallets without affecting the overall library performance.`),Ce.forEach(t),nt=y(e),L=f(e,"H3",{id:!0,tabindex:!0});var Ne=u(L);$(B.$$.fragment,Ne),Nt=r(Ne," Expansive Initialization Options"),Ne.forEach(t),at=y(e),C=f(e,"P",{});var S=u(C);Rt=r(S,"We\u2019ve made initialization simpler while introducing more powerful options like "),$(Z.$$.fragment,S),Ut=r(S,` and Notify in web3-onboard.
Onboard now requires two compulsory initial setup options: `),$(de.$$.fragment,S),qt=r(S," (Wallet modules, as shown above, to be initialized and added to wallet selection modal) and "),$(ce.$$.fragment,S),Dt=r(S," (EVM networks your app should work with). You can also pass multiple wallets and chains."),S.forEach(t),ot=y(e),$($e.$$.fragment,e),Se=f(e,"P",{});var Be=u(Se);jt=r(Be,"You can find the full list of initialization options in our docs here."),Be.forEach(t),st=y(e),H=f(e,"H3",{id:!0,tabindex:!0});var wn=u(H);$(X.$$.fragment,wn),Ft=r(wn," API Upgrades"),wn.forEach(t),lt=y(e),x=f(e,"P",{});var ae=u(x);Yt=r(ae,"We've also added a number of API enhancements to help you create an onboarding experience faster. For example, previously, you had to call "),$(me.$$.fragment,ae),Gt=r(ae," and "),$(he.$$.fragment,ae),Vt=r(ae," API to get a user connected: "),$(be.$$.fragment,ae),Bt=r(ae,`
Now, you only need to call the connectWallet API:`),ae.forEach(t),rt=y(e),Ae=f(e,"P",{});var vn=u(Ae);$(we.$$.fragment,vn),vn.forEach(t),it=y(e),Te=f(e,"P",{});var En=u(Te);Zt=r(En,"Learn more about state changes tracked with the Onboard API here and the exposed actions you can use to modify the state here."),En.forEach(t),pt=y(e),M=f(e,"H3",{id:!0,tabindex:!0});var gn=u(M);$(J.$$.fragment,gn),Xt=r(gn," Framework Support"),gn.forEach(t),ft=y(e),We=f(e,"P",{});var On=u(We);Jt=r(On,"Although Onboard is still framework-agnostic, we\u2019ve introduced a couple of framework-specific modules that are frequently asked for by our users."),On.forEach(t),ut=y(e),N=f(e,"P",{});var Ze=u(N);$(ge.$$.fragment,Ze),Kt=r(Ze," - React Hooks to connect users to web3 dApps better. You can check out "),$(K.$$.fragment,Ze),Qt=r(Ze," we've written on that."),Ze.forEach(t),dt=y(e),ye=f(e,"P",{});var yn=u(ye);$(_e.$$.fragment,yn),en=r(yn," - A set of reusable functions for integrating Web3-Onboard into a Vue 3 project. This is also compatible with a Vue 2 + composition-api dapp."),yn.forEach(t),ct=y(e),R=f(e,"H3",{id:!0,tabindex:!0});var _n=u(R);$(Q.$$.fragment,_n),tn=r(_n," CSS Customizations"),_n.forEach(t),$t=y(e),T=f(e,"P",{});var Re=u(T);nn=r(Re,"We've also added more expansive custom CSS properties so you can style every part of your onboarding experience to match the overall experience of your dApp. To apply Web3-Onboard CSS customizations, you don't need to attach them to the "),$(ke.$$.fragment,Re),an=r(Re," class like before. Instead, you can simply place them in the "),$(ve.$$.fragment,Re),on=r(Re," CSS pseudo-class, as shown below:"),Re.forEach(t),mt=y(e),$(Ee.$$.fragment,e),ze=f(e,"P",{});var In=u(ze);sn=r(In,"The full list of CSS variables for web3-onboard are available here."),In.forEach(t),ht=y(e),U=f(e,"H3",{id:!0,tabindex:!0});var kn=u(U);$(ee.$$.fragment,kn),ln=r(kn," Other Important Changes"),kn.forEach(t),bt=y(e),Le=f(e,"P",{});var Cn=u(Le);rn=r(Cn,"There are also other notable infrastructural changes in Web3-Onboard:"),Cn.forEach(t),wt=y(e),P=f(e,"UL",{});var oe=u(P);De=f(oe,"LI",{});var xn=u(De);pn=r(xn,"Dynamic Imports of dependencies"),xn.forEach(t),fn=y(oe),je=f(oe,"LI",{});var Pn=u(je);un=r(Pn,"Wallet Provider Standardization"),Pn.forEach(t),dn=y(oe),Fe=f(oe,"LI",{});var Sn=u(Fe);cn=r(Sn,"Support for Chain ID in decimal format"),Sn.forEach(t),$n=y(oe),q=f(oe,"LI",{});var Ue=u(q);mn=r(Ue,"If you have questions or requests, please feel free to drop by the "),$(te.$$.fragment,Ue),hn=r(Ue," or "),$(ne.$$.fragment,Ue),bn=r(Ue,"."),Ue.forEach(t),oe.forEach(t),this.h()},h(){E(W,"id","background"),E(W,"tabindex","-1"),E(z,"id","package-upgrade-modularization"),E(z,"tabindex","-1"),E(L,"id","expansive-initialization-options"),E(L,"tabindex","-1"),E(H,"id","api-upgrades"),E(H,"tabindex","-1"),E(M,"id","framework-support"),E(M,"tabindex","-1"),E(R,"id","css-customizations"),E(R,"tabindex","-1"),E(U,"id","other-important-changes"),E(U,"tabindex","-1")},m(e,a){s(e,o,a),i(o,n),s(e,d,a),s(e,xe,a),i(xe,yt),s(e,Xe,a),s(e,W,a),m(j,W,null),i(W,_t),s(e,Je,a),s(e,Pe,a),i(Pe,kt),s(e,Ke,a),s(e,A,a),i(A,se),i(se,vt),m(le,se,null),i(se,Et),i(A,Ot),i(A,qe),i(qe,It),i(A,Ct),i(A,re),i(re,xt),m(ie,re,null),i(re,Pt),s(e,Qe,a),s(e,v,a),i(v,St),m(F,v,null),i(v,At),m(pe,v,null),i(v,Tt),m(fe,v,null),i(v,Wt),m(Y,v,null),i(v,zt),s(e,et,a),s(e,z,a),m(G,z,null),i(z,Lt),s(e,tt,a),s(e,V,a),i(V,Ht),m(ue,V,null),i(V,Mt),s(e,nt,a),s(e,L,a),m(B,L,null),i(L,Nt),s(e,at,a),s(e,C,a),i(C,Rt),m(Z,C,null),i(C,Ut),m(de,C,null),i(C,qt),m(ce,C,null),i(C,Dt),s(e,ot,a),m($e,e,a),s(e,Se,a),i(Se,jt),s(e,st,a),s(e,H,a),m(X,H,null),i(H,Ft),s(e,lt,a),s(e,x,a),i(x,Yt),m(me,x,null),i(x,Gt),m(he,x,null),i(x,Vt),m(be,x,null),i(x,Bt),s(e,rt,a),s(e,Ae,a),m(we,Ae,null),s(e,it,a),s(e,Te,a),i(Te,Zt),s(e,pt,a),s(e,M,a),m(J,M,null),i(M,Xt),s(e,ft,a),s(e,We,a),i(We,Jt),s(e,ut,a),s(e,N,a),m(ge,N,null),i(N,Kt),m(K,N,null),i(N,Qt),s(e,dt,a),s(e,ye,a),m(_e,ye,null),i(ye,en),s(e,ct,a),s(e,R,a),m(Q,R,null),i(R,tn),s(e,$t,a),s(e,T,a),i(T,nn),m(ke,T,null),i(T,an),m(ve,T,null),i(T,on),s(e,mt,a),m(Ee,e,a),s(e,ze,a),i(ze,sn),s(e,ht,a),s(e,U,a),m(ee,U,null),i(U,ln),s(e,bt,a),s(e,Le,a),i(Le,rn),s(e,wt,a),s(e,P,a),i(P,De),i(De,pn),i(P,fn),i(P,je),i(je,un),i(P,dn),i(P,Fe),i(Fe,cn),i(P,$n),i(P,q),i(q,mn),m(te,q,null),i(q,hn),m(ne,q,null),i(q,bn),gt=!0},p(e,[a]){const Ye={};a&1&&(Ye.$$scope={dirty:a,ctx:e}),j.$set(Ye);const He={};a&1&&(He.$$scope={dirty:a,ctx:e}),F.$set(He);const Ge={};a&1&&(Ge.$$scope={dirty:a,ctx:e}),Y.$set(Ge);const D={};a&1&&(D.$$scope={dirty:a,ctx:e}),G.$set(D);const Oe={};a&1&&(Oe.$$scope={dirty:a,ctx:e}),B.$set(Oe);const Ve={};a&1&&(Ve.$$scope={dirty:a,ctx:e}),Z.$set(Ve);const Ie={};a&1&&(Ie.$$scope={dirty:a,ctx:e}),X.$set(Ie);const O={};a&1&&(O.$$scope={dirty:a,ctx:e}),J.$set(O);const Me={};a&1&&(Me.$$scope={dirty:a,ctx:e}),K.$set(Me);const Ce={};a&1&&(Ce.$$scope={dirty:a,ctx:e}),Q.$set(Ce);const Ne={};a&1&&(Ne.$$scope={dirty:a,ctx:e}),ee.$set(Ne);const S={};a&1&&(S.$$scope={dirty:a,ctx:e}),te.$set(S);const Be={};a&1&&(Be.$$scope={dirty:a,ctx:e}),ne.$set(Be)},i(e){gt||(h(j.$$.fragment,e),h(le.$$.fragment,e),h(ie.$$.fragment,e),h(F.$$.fragment,e),h(pe.$$.fragment,e),h(fe.$$.fragment,e),h(Y.$$.fragment,e),h(G.$$.fragment,e),h(ue.$$.fragment,e),h(B.$$.fragment,e),h(Z.$$.fragment,e),h(de.$$.fragment,e),h(ce.$$.fragment,e),h($e.$$.fragment,e),h(X.$$.fragment,e),h(me.$$.fragment,e),h(he.$$.fragment,e),h(be.$$.fragment,e),h(we.$$.fragment,e),h(J.$$.fragment,e),h(ge.$$.fragment,e),h(K.$$.fragment,e),h(_e.$$.fragment,e),h(Q.$$.fragment,e),h(ke.$$.fragment,e),h(ve.$$.fragment,e),h(Ee.$$.fragment,e),h(ee.$$.fragment,e),h(te.$$.fragment,e),h(ne.$$.fragment,e),gt=!0)},o(e){b(j.$$.fragment,e),b(le.$$.fragment,e),b(ie.$$.fragment,e),b(F.$$.fragment,e),b(pe.$$.fragment,e),b(fe.$$.fragment,e),b(Y.$$.fragment,e),b(G.$$.fragment,e),b(ue.$$.fragment,e),b(B.$$.fragment,e),b(Z.$$.fragment,e),b(de.$$.fragment,e),b(ce.$$.fragment,e),b($e.$$.fragment,e),b(X.$$.fragment,e),b(me.$$.fragment,e),b(he.$$.fragment,e),b(be.$$.fragment,e),b(we.$$.fragment,e),b(J.$$.fragment,e),b(ge.$$.fragment,e),b(K.$$.fragment,e),b(_e.$$.fragment,e),b(Q.$$.fragment,e),b(ke.$$.fragment,e),b(ve.$$.fragment,e),b(Ee.$$.fragment,e),b(ee.$$.fragment,e),b(te.$$.fragment,e),b(ne.$$.fragment,e),gt=!1},d(e){e&&t(o),e&&t(d),e&&t(xe),e&&t(Xe),e&&t(W),w(j),e&&t(Je),e&&t(Pe),e&&t(Ke),e&&t(A),w(le),w(ie),e&&t(Qe),e&&t(v),w(F),w(pe),w(fe),w(Y),e&&t(et),e&&t(z),w(G),e&&t(tt),e&&t(V),w(ue),e&&t(nt),e&&t(L),w(B),e&&t(at),e&&t(C),w(Z),w(de),w(ce),e&&t(ot),w($e,e),e&&t(Se),e&&t(st),e&&t(H),w(X),e&&t(lt),e&&t(x),w(me),w(he),w(be),e&&t(rt),e&&t(Ae),w(we),e&&t(it),e&&t(Te),e&&t(pt),e&&t(M),w(J),e&&t(ft),e&&t(We),e&&t(ut),e&&t(N),w(ge),w(K),e&&t(dt),e&&t(ye),w(_e),e&&t(ct),e&&t(R),w(Q),e&&t($t),e&&t(T),w(ke),w(ve),e&&t(mt),w(Ee,e),e&&t(ze),e&&t(ht),e&&t(U),w(ee),e&&t(bt),e&&t(Le),e&&t(wt),e&&t(P),w(te),w(ne)}}}class aa extends Tn{constructor(o){super(),Wn(this,o,null,Bn,zn,{})}}export{aa as default};
