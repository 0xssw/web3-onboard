import{S as vs,i as Is,s as ks,e as h,t as c,k as u,w as D,c as _,a as g,h as y,d as o,m as w,x as F,b as O,g as t,M as $,y as i,q as C,o as A,B as f,E as js}from"../../../chunks/index-9cb557dd.js";import"../../../chunks/scroll-f06ca868.js";import{C as Y}from"../../../chunks/CodeFence-5d76eda7.js";import{C as bs}from"../../../chunks/CodeInline-793a3cb8.js";import{L as Ds}from"../../../chunks/Link-28c9e4a5.js";/* empty css                                                            */import{T as Ps,a as gs}from"../../../chunks/Tabs-c93b49d1.js";import"../../../chunks/singletons-e07d0660.js";import"../../../chunks/contexts-8ab591a1.js";function xs(d){let n;return{c(){n=c("#")},l(a){n=y(a,"#")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function Bs(d){let n,a;return n=new Y({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/injected
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/injected</span></span>
<span class="line"></span></code></pre>`}}),{c(){D(n.$$.fragment)},l(l){F(n.$$.fragment,l)},m(l,r){i(n,l,r),a=!0},p:js,i(l){a||(C(n.$$.fragment,l),a=!0)},o(l){A(n.$$.fragment,l),a=!1},d(l){f(n,l)}}}function Ms(d){let n,a;return n=new Y({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/injected
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/injected</span></span>
<span class="line"></span></code></pre>`}}),{c(){D(n.$$.fragment)},l(l){F(n.$$.fragment,l)},m(l,r){i(n,l,r),a=!0},p:js,i(l){a||(C(n.$$.fragment,l),a=!0)},o(l){A(n.$$.fragment,l),a=!1},d(l){f(n,l)}}}function Os(d){let n,a,l,r;return n=new gs({props:{value:"yarn",$$slots:{default:[Bs]},$$scope:{ctx:d}}}),l=new gs({props:{value:"npm",$$slots:{default:[Ms]},$$scope:{ctx:d}}}),{c(){D(n.$$.fragment),a=u(),D(l.$$.fragment)},l(e){F(n.$$.fragment,e),a=w(e),F(l.$$.fragment,e)},m(e,m){i(n,e,m),t(e,a,m),i(l,e,m),r=!0},p(e,m){const T={};m&1&&(T.$$scope={dirty:m,ctx:e}),n.$set(T);const E={};m&1&&(E.$$scope={dirty:m,ctx:e}),l.$set(E)},i(e){r||(C(n.$$.fragment,e),C(l.$$.fragment,e),r=!0)},o(e){A(n.$$.fragment,e),A(l.$$.fragment,e),r=!1},d(e){f(n,e),e&&o(a),f(l,e)}}}function Ts(d){let n;return{c(){n=c("#")},l(a){n=y(a,"#")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function Ns(d){let n;return{c(){n=c("#")},l(a){n=y(a,"#")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function Rs(d){let n;return{c(){n=c("#")},l(a){n=y(a,"#")},m(a,l){t(a,n,l)},d(a){a&&o(n)}}}function Ws(d){let n,a,l,r,e,m,T,E,Z,j,P,ys,ss,K,Fs,ns,N,v,x,is,as,b,Cs,R,As,W,fs,ls,L,G,ds,ps,q,Q,$s,os,S,I,B,ms,es,M,us,U,ws,ts,H,rs;return e=new Ds({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[xs]},$$scope:{ctx:d}}}),E=new Ps({props:{values:["yarn","npm"],$$slots:{default:[Os]},$$scope:{ctx:d}}}),P=new Ds({props:{class:"header-anchor",href:"#quickstart","aria-hidden":"true",$$slots:{default:[Ts]},$$scope:{ctx:d}}}),N=new Y({props:{lang:"javascript",ext:"js",linesCount:28,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> MAINNET_RPC_URL </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/&lt;INFURA_KEY&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> MAINNET_RPC_URL</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">appMetadata</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">My App</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;SVG_ICON_STRING&gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">description</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">My app using Onboard</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> connectedWallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">connectWallet</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(connectedWallets)</span></span>
<span class="line"></span></code></pre>`}}),x=new Ds({props:{class:"header-anchor",href:"#filtering-wallets","aria-hidden":"true",$$slots:{default:[Ns]},$$scope:{ctx:d}}}),R=new bs({props:{code:"Platform"}}),W=new bs({props:{code:"false"}}),L=new Y({props:{lang:"javascript",ext:"js",linesCount:16,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ProviderLabel</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> MAINNET_RPC_URL </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/&lt;INFURA_KEY&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">filter</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">[</span><span style="color: #A6ACCD">ProviderLabel</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Detected</span><span style="color: #F07178">]</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">false</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">//... other options</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),q=new Y({props:{lang:"javascript",ext:"js",linesCount:17,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ProviderLabel</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> MAINNET_RPC_URL </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/&lt;INFURA_KEY&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">filter</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #464B5D; font-style: italic">// allow only on non android mobile</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">[</span><span style="color: #A6ACCD">ProviderLabel</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Detected</span><span style="color: #F07178">]</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Android</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">desktop</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">//... other options</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),S=new Y({props:{lang:"typescript",ext:"ts",linesCount:19,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Platform</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Windows Phone</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Windows</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">macOS</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">iOS</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Android</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Linux</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Chrome OS</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Android Browser</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Chrome</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Chromium</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Firefox</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Microsoft Edge</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Opera</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Safari</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">desktop</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">mobile</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">tablet</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span></code></pre>`}}),B=new Ds({props:{class:"header-anchor",href:"#adding-custom-injected-wallets","aria-hidden":"true",$$slots:{default:[Rs]},$$scope:{ctx:d}}}),U=new bs({props:{code:"custom"}}),H=new Y({props:{lang:"typescript",ext:"ts",linesCount:33,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> equal </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// The label that will be displayed in the wallet selection modal</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Equal</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// The property on the window where the injected provider is defined</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// Example: window.ethereum</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">injectedNamespace</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ethereum</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// A function that returns a bool indicating whether or not the provider is</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// of a certain identity. In this case, a unique property on the provider</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// is used to identify the provider.</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// In most cases this is in the format: is&lt;provider-name&gt;.</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// You may also include custom logic here if checking for the property</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// isn&#39;t sufficient.</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #82AAFF">checkProviderIdentity</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">({</span><span style="color: #A6ACCD"> provider </span><span style="color: #89DDFF">})</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">!!</span><span style="color: #A6ACCD">provider </span><span style="color: #89DDFF">&amp;&amp;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">!!</span><span style="color: #A6ACCD">provider[ProviderIdentityFlag</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">MetaMask]</span><span style="color: #89DDFF">,</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// A method that returns a string of the wallet icon which will be displayed</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #82AAFF">getIcon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">async</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> (</span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">import</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;PATH_TO_ICON&gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">))</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">default</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// Returns a valid EIP1193 provider. In some cases the provider will need to be patched to satisfy the EIP1193 Provider interface</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #82AAFF">getInterface</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> (</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">provider</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> window</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">ethereum</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// A list of platforms that this wallet supports</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">platforms</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">desktop</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">custom</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [equal]</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">//... other options</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),{c(){n=h("h1"),a=c("@web3-onboard/injected-wallets"),l=u(),r=h("h2"),D(e.$$.fragment),m=c(" Install"),T=u(),D(E.$$.fragment),Z=u(),j=h("h2"),D(P.$$.fragment),ys=c(" Quickstart"),ss=u(),K=h("p"),Fs=c("To allow all injected wallets that are supported, don't pass in any options:"),ns=u(),D(N.$$.fragment),v=h("h2"),D(x.$$.fragment),is=c(" Filtering Wallets"),as=u(),b=h("p"),Cs=c("Injected wallets that you do not want to support can be filtered based on the "),D(R.$$.fragment),As=c(" the user is on. For example you may not want to support the 'Detected Wallet' that is detected automatically and filter it via all platforms by passing "),D(W.$$.fragment),fs=c(":"),ls=u(),D(L.$$.fragment),G=h("p"),ds=c("Or you may want to only filter the 'Detected Wallet' on a select few platforms:"),ps=u(),D(q.$$.fragment),Q=h("p"),$s=c("The following platforms can be used to filter wallets:"),os=u(),D(S.$$.fragment),I=h("h2"),D(B.$$.fragment),ms=c(" Adding Custom Injected Wallets"),es=u(),M=h("p"),us=c("If there is an injected wallet that you would like to support in your app, but is not yet included in this repo, you can add a custom wallet module in the "),D(U.$$.fragment),ws=c(" field:"),ts=u(),D(H.$$.fragment),this.h()},l(s){n=_(s,"H1",{});var p=g(n);a=y(p,"@web3-onboard/injected-wallets"),p.forEach(o),l=w(s),r=_(s,"H2",{id:!0,tabindex:!0});var V=g(r);F(e.$$.fragment,V),m=y(V," Install"),V.forEach(o),T=w(s),F(E.$$.fragment,s),Z=w(s),j=_(s,"H2",{id:!0,tabindex:!0});var z=g(j);F(P.$$.fragment,z),ys=y(z," Quickstart"),z.forEach(o),ss=w(s),K=_(s,"P",{});var X=g(K);Fs=y(X,"To allow all injected wallets that are supported, don't pass in any options:"),X.forEach(o),ns=w(s),F(N.$$.fragment,s),v=_(s,"H2",{id:!0,tabindex:!0});var J=g(v);F(x.$$.fragment,J),is=y(J," Filtering Wallets"),J.forEach(o),as=w(s),b=_(s,"P",{});var k=g(b);Cs=y(k,"Injected wallets that you do not want to support can be filtered based on the "),F(R.$$.fragment,k),As=y(k," the user is on. For example you may not want to support the 'Detected Wallet' that is detected automatically and filter it via all platforms by passing "),F(W.$$.fragment,k),fs=y(k,":"),k.forEach(o),ls=w(s),F(L.$$.fragment,s),G=_(s,"P",{});var hs=g(G);ds=y(hs,"Or you may want to only filter the 'Detected Wallet' on a select few platforms:"),hs.forEach(o),ps=w(s),F(q.$$.fragment,s),Q=_(s,"P",{});var _s=g(Q);$s=y(_s,"The following platforms can be used to filter wallets:"),_s.forEach(o),os=w(s),F(S.$$.fragment,s),I=_(s,"H2",{id:!0,tabindex:!0});var Es=g(I);F(B.$$.fragment,Es),ms=y(Es," Adding Custom Injected Wallets"),Es.forEach(o),es=w(s),M=_(s,"P",{});var cs=g(M);us=y(cs,"If there is an injected wallet that you would like to support in your app, but is not yet included in this repo, you can add a custom wallet module in the "),F(U.$$.fragment,cs),ws=y(cs," field:"),cs.forEach(o),ts=w(s),F(H.$$.fragment,s),this.h()},h(){O(r,"id","install"),O(r,"tabindex","-1"),O(j,"id","quickstart"),O(j,"tabindex","-1"),O(v,"id","filtering-wallets"),O(v,"tabindex","-1"),O(I,"id","adding-custom-injected-wallets"),O(I,"tabindex","-1")},m(s,p){t(s,n,p),$(n,a),t(s,l,p),t(s,r,p),i(e,r,null),$(r,m),t(s,T,p),i(E,s,p),t(s,Z,p),t(s,j,p),i(P,j,null),$(j,ys),t(s,ss,p),t(s,K,p),$(K,Fs),t(s,ns,p),i(N,s,p),t(s,v,p),i(x,v,null),$(v,is),t(s,as,p),t(s,b,p),$(b,Cs),i(R,b,null),$(b,As),i(W,b,null),$(b,fs),t(s,ls,p),i(L,s,p),t(s,G,p),$(G,ds),t(s,ps,p),i(q,s,p),t(s,Q,p),$(Q,$s),t(s,os,p),i(S,s,p),t(s,I,p),i(B,I,null),$(I,ms),t(s,es,p),t(s,M,p),$(M,us),i(U,M,null),$(M,ws),t(s,ts,p),i(H,s,p),rs=!0},p(s,[p]){const V={};p&1&&(V.$$scope={dirty:p,ctx:s}),e.$set(V);const z={};p&1&&(z.$$scope={dirty:p,ctx:s}),E.$set(z);const X={};p&1&&(X.$$scope={dirty:p,ctx:s}),P.$set(X);const J={};p&1&&(J.$$scope={dirty:p,ctx:s}),x.$set(J);const k={};p&1&&(k.$$scope={dirty:p,ctx:s}),B.$set(k)},i(s){rs||(C(e.$$.fragment,s),C(E.$$.fragment,s),C(P.$$.fragment,s),C(N.$$.fragment,s),C(x.$$.fragment,s),C(R.$$.fragment,s),C(W.$$.fragment,s),C(L.$$.fragment,s),C(q.$$.fragment,s),C(S.$$.fragment,s),C(B.$$.fragment,s),C(U.$$.fragment,s),C(H.$$.fragment,s),rs=!0)},o(s){A(e.$$.fragment,s),A(E.$$.fragment,s),A(P.$$.fragment,s),A(N.$$.fragment,s),A(x.$$.fragment,s),A(R.$$.fragment,s),A(W.$$.fragment,s),A(L.$$.fragment,s),A(q.$$.fragment,s),A(S.$$.fragment,s),A(B.$$.fragment,s),A(U.$$.fragment,s),A(H.$$.fragment,s),rs=!1},d(s){s&&o(n),s&&o(l),s&&o(r),f(e),s&&o(T),f(E,s),s&&o(Z),s&&o(j),f(P),s&&o(ss),s&&o(K),s&&o(ns),f(N,s),s&&o(v),f(x),s&&o(as),s&&o(b),f(R),f(W),s&&o(ls),f(L,s),s&&o(G),s&&o(ps),f(q,s),s&&o(Q),s&&o(os),f(S,s),s&&o(I),f(B),s&&o(es),s&&o(M),f(U),s&&o(ts),f(H,s)}}}class Vs extends vs{constructor(n){super(),Is(this,n,null,Ws,ks,{})}}export{Vs as default};
