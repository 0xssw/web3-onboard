import{S as ja,i as Ta,s as Na,e as d,t as c,k as u,w as y,c as $,a as m,h as D,d as a,m as b,x as i,b as Ds,g as r,M as p,y as F,q as C,o as A,B as f,E as Pn}from"../../../chunks/index-9cb557dd.js";import"../../../chunks/scroll-f06ca868.js";import{C as z}from"../../../chunks/CodeFence-5d76eda7.js";import{C as v}from"../../../chunks/CodeInline-793a3cb8.js";import{L as ys}from"../../../chunks/Link-28c9e4a5.js";import{A as Oa}from"../../../chunks/Admonition-85e1e4bb.js";/* empty css                                                            */import{T as Ia,a as Rn}from"../../../chunks/Tabs-c93b49d1.js";import"../../../chunks/singletons-e07d0660.js";import"../../../chunks/contexts-8ab591a1.js";function Ra(h){let n;return{c(){n=c("#")},l(l){n=D(l,"#")},m(l,o){r(l,n,o)},d(l){l&&a(n)}}}function Pa(h){let n,l;return n=new z({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/core
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/core</span></span>
<span class="line"></span></code></pre>`}}),{c(){y(n.$$.fragment)},l(o){i(n.$$.fragment,o)},m(o,g){F(n,o,g),l=!0},p:Pn,i(o){l||(C(n.$$.fragment,o),l=!0)},o(o){A(n.$$.fragment,o),l=!1},d(o){f(n,o)}}}function za(h){let n,l;return n=new z({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/core
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/core</span></span>
<span class="line"></span></code></pre>`}}),{c(){y(n.$$.fragment)},l(o){i(n.$$.fragment,o)},m(o,g){F(n,o,g),l=!0},p:Pn,i(o){l||(C(n.$$.fragment,o),l=!0)},o(o){A(n.$$.fragment,o),l=!1},d(o){f(n,o)}}}function Sa(h){let n,l,o,g;return n=new Rn({props:{value:"yarn",$$slots:{default:[Pa]},$$scope:{ctx:h}}}),o=new Rn({props:{value:"npm",$$slots:{default:[za]},$$scope:{ctx:h}}}),{c(){y(n.$$.fragment),l=u(),y(o.$$.fragment)},l(t){i(n.$$.fragment,t),l=b(t),i(o.$$.fragment,t)},m(t,w){F(n,t,w),r(t,l,w),F(o,t,w),g=!0},p(t,w){const B={};w&1&&(B.$$scope={dirty:w,ctx:t}),n.$set(B);const k={};w&1&&(k.$$scope={dirty:w,ctx:t}),o.$set(k)},i(t){g||(C(n.$$.fragment,t),C(o.$$.fragment,t),g=!0)},o(t){A(n.$$.fragment,t),A(o.$$.fragment,t),g=!1},d(t){f(n,t),t&&a(l),f(o,t)}}}function Ma(h){let n,l;return n=new z({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`yarn add @web3-onboard/injected-wallets @web3-onboard/coinbase @web3-onboard/ledger @web3-onboard/trezor @web3-onboard/keepkey @web3-onboard/walletconnect @web3-onboard/web3auth @web3-onboard/torus @web3-onboard/portis @web3-onboard/mew @web3-onboard/gnosis @web3-onboard/magic @web3-onboard/fortmatic @web3-onboard/dcent
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">yarn add @web3-onboard/injected-wallets @web3-onboard/coinbase @web3-onboard/ledger @web3-onboard/trezor @web3-onboard/keepkey @web3-onboard/walletconnect @web3-onboard/web3auth @web3-onboard/torus @web3-onboard/portis @web3-onboard/mew @web3-onboard/gnosis @web3-onboard/magic @web3-onboard/fortmatic @web3-onboard/dcent</span></span>
<span class="line"></span></code></pre>`}}),{c(){y(n.$$.fragment)},l(o){i(n.$$.fragment,o)},m(o,g){F(n,o,g),l=!0},p:Pn,i(o){l||(C(n.$$.fragment,o),l=!0)},o(o){A(n.$$.fragment,o),l=!1},d(o){f(n,o)}}}function La(h){let n,l;return n=new z({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`npm install @web3-onboard/injected-wallets @web3-onboard/coinbase @web3-onboard/ledger @web3-onboard/trezor @web3-onboard/keepkey @web3-onboard/walletconnect @web3-onboard/web3auth @web3-onboard/torus @web3-onboard/portis @web3-onboard/mew @web3-onboard/gnosis @web3-onboard/magic @web3-onboard/fortmatic @web3-onboard/dcent
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #A6ACCD">npm install @web3-onboard/injected-wallets @web3-onboard/coinbase @web3-onboard/ledger @web3-onboard/trezor @web3-onboard/keepkey @web3-onboard/walletconnect @web3-onboard/web3auth @web3-onboard/torus @web3-onboard/portis @web3-onboard/mew @web3-onboard/gnosis @web3-onboard/magic @web3-onboard/fortmatic @web3-onboard/dcent</span></span>
<span class="line"></span></code></pre>`}}),{c(){y(n.$$.fragment)},l(o){i(n.$$.fragment,o)},m(o,g){F(n,o,g),l=!0},p:Pn,i(o){l||(C(n.$$.fragment,o),l=!0)},o(o){A(n.$$.fragment,o),l=!1},d(o){f(n,o)}}}function Ua(h){let n,l,o,g;return n=new Rn({props:{value:"yarn",$$slots:{default:[Ma]},$$scope:{ctx:h}}}),o=new Rn({props:{value:"npm",$$slots:{default:[La]},$$scope:{ctx:h}}}),{c(){y(n.$$.fragment),l=u(),y(o.$$.fragment)},l(t){i(n.$$.fragment,t),l=b(t),i(o.$$.fragment,t)},m(t,w){F(n,t,w),r(t,l,w),F(o,t,w),g=!0},p(t,w){const B={};w&1&&(B.$$scope={dirty:w,ctx:t}),n.$set(B);const k={};w&1&&(k.$$scope={dirty:w,ctx:t}),o.$set(k)},i(t){g||(C(n.$$.fragment,t),C(o.$$.fragment,t),g=!0)},o(t){A(n.$$.fragment,t),A(o.$$.fragment,t),g=!1},d(t){f(n,t),t&&a(l),f(o,t)}}}function Ha(h){let n;return{c(){n=c("Build Environments")},l(l){n=D(l,"Build Environments")},m(l,o){r(l,n,o)},d(l){l&&a(n)}}}function qa(h){let n,l,o,g,t,w,B,k,N,Z,M,L,U,O,ss,H,q,G,R,ns,T;return B=new v({props:{code:"injected-wallets"}}),N=new ys({props:{href:"#build-environments",$$slots:{default:[Ha]},$$scope:{ctx:h}}}),{c(){n=d("ul"),l=d("li"),o=c("MEW wallet currently fails to install on M1 macs"),g=u(),t=d("li"),w=c("All wallet modules (except for "),y(B.$$.fragment),k=c(") require extra dependencies and may require polyfilling the node built in modules for the browser. See the "),y(N.$$.fragment),Z=c(" section for more info"),M=u(),L=d("li"),U=d("strong"),O=c("If using React"),ss=c(" you may be interested in checking out the React Hooks package here - https://www.npmjs.com/package/@web3-onboard/react"),H=u(),q=d("li"),G=d("strong"),R=c("If using Vue"),ns=c(" you may be interested in checking out the Vue package here - https://www.npmjs.com/package/@web3-onboard/vue")},l(_){n=$(_,"UL",{});var E=m(n);l=$(E,"LI",{});var j=m(l);o=D(j,"MEW wallet currently fails to install on M1 macs"),j.forEach(a),g=b(E),t=$(E,"LI",{});var W=m(t);w=D(W,"All wallet modules (except for "),i(B.$$.fragment,W),k=D(W,") require extra dependencies and may require polyfilling the node built in modules for the browser. See the "),i(N.$$.fragment,W),Z=D(W," section for more info"),W.forEach(a),M=b(E),L=$(E,"LI",{});var as=m(L);U=$(as,"STRONG",{});var K=m(U);O=D(K,"If using React"),K.forEach(a),ss=D(as," you may be interested in checking out the React Hooks package here - https://www.npmjs.com/package/@web3-onboard/react"),as.forEach(a),H=b(E),q=$(E,"LI",{});var is=m(q);G=$(is,"STRONG",{});var Fs=m(G);R=D(Fs,"If using Vue"),Fs.forEach(a),ns=D(is," you may be interested in checking out the Vue package here - https://www.npmjs.com/package/@web3-onboard/vue"),is.forEach(a),E.forEach(a)},m(_,E){r(_,n,E),p(n,l),p(l,o),p(n,g),p(n,t),p(t,w),F(B,t,null),p(t,k),F(N,t,null),p(t,Z),p(n,M),p(n,L),p(L,U),p(U,O),p(L,ss),p(n,H),p(n,q),p(q,G),p(G,R),p(q,ns),T=!0},p(_,E){const j={};E&1&&(j.$$scope={dirty:E,ctx:_}),N.$set(j)},i(_){T||(C(B.$$.fragment,_),C(N.$$.fragment,_),T=!0)},o(_){A(B.$$.fragment,_),A(N.$$.fragment,_),T=!1},d(_){_&&a(n),f(B),f(N)}}}function Ga(h){let n;return{c(){n=c("#")},l(l){n=D(l,"#")},m(l,o){r(l,n,o)},d(l){l&&a(n)}}}function Wa(h){let n;return{c(){n=c("#")},l(l){n=D(l,"#")},m(l,o){r(l,n,o)},d(l){l&&a(n)}}}function Va(h){let n;return{c(){n=c("default en file")},l(l){n=D(l,"default en file")},m(l,o){r(l,n,o)},d(l){l&&a(n)}}}function Ya(h){let n;return{c(){n=c("ICU syntax")},l(l){n=D(l,"ICU syntax")},m(l,o){r(l,n,o)},d(l){l&&a(n)}}}function Ka(h){let n;return{c(){n=c("default en file here")},l(l){n=D(l,"default en file here")},m(l,o){r(l,n,o)},d(l){l&&a(n)}}}function Ja(h){let n;return{c(){n=c("#")},l(l){n=D(l,"#")},m(l,o){r(l,n,o)},d(l){l&&a(n)}}}function Qa(h){let n,l,o,g,t,w,B,k,N,Z,M,L,U,O,ss,H,q,G,R,ns,T,_,E,j,W,as,K,is,Fs,Cs,J,ls,zn,bn,As,pn,fs,Sn,hn,ds,tn,$s,Mn,gn,ms,us,rn,bs,Ln,wn,hs,Q,cn,gs,Un,ws,Hn,Bn,Bs,V,qn,os,Gn,es,Wn,En,Es,Dn,vs,Vn,vn,ks,I,yn,_s,Yn,xs,Kn,Is,Jn,js,Qn,Ts,Xn,kn,x,Ys,Ns,Zn,sa,Os,Rs,na,ps,aa,ts,Ps,la,zs,oa,ea,rs,Ss,pa,Ms,ta,ra,Ks,Ls,ca,Da,Js,Us,ya,_n,Y,ia,Hs,Fa,qs,Ca,xn,Qs,Aa,In,Gs,Ws,X,cs,fa,jn,Xs,da,Tn,Vs,Nn;return k=new ys({props:{class:"header-anchor",href:"#install","aria-hidden":"true",$$slots:{default:[Ra]},$$scope:{ctx:h}}}),O=new Ia({props:{values:["yarn","npm"],$$slots:{default:[Sa]},$$scope:{ctx:h}}}),R=new Ia({props:{values:["yarn","npm"],$$slots:{default:[Ua]},$$scope:{ctx:h}}}),T=new Oa({props:{type:"note",$$slots:{default:[qa]},$$scope:{ctx:h}}}),j=new ys({props:{class:"header-anchor",href:"#initialization","aria-hidden":"true",$$slots:{default:[Ga]},$$scope:{ctx:h}}}),Cs=new z({props:{lang:"typescript",ext:"ts",linesCount:10,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">InitOptions</span><span style="color: #A6ACCD"> {</span></span>
<span class="line"><span style="color: #A6ACCD">  wallets: WalletInit[]</span></span>
<span class="line"><span style="color: #A6ACCD">  chains: Chain[]</span></span>
<span class="line"><span style="color: #A6ACCD">  appMetadata?: AppMetadata</span></span>
<span class="line"><span style="color: #A6ACCD">  i18n?: i18nOptions</span></span>
<span class="line"><span style="color: #A6ACCD">  accountCenter?: AccountCenterOptions</span></span>
<span class="line"><span style="color: #A6ACCD">  apiKey?: string</span></span>
<span class="line"><span style="color: #A6ACCD">  notify?: Partial</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">NotifyOptions</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">}</span></span>
<span class="line"></span></code></pre>`}}),ls=new ys({props:{class:"header-anchor",href:"#options","aria-hidden":"true",$$slots:{default:[Wa]},$$scope:{ctx:h}}}),fs=new v({props:{code:"wallets"}}),$s=new v({props:{code:"chains"}}),ms=new z({props:{lang:"typescript",ext:"ts",linesCount:12,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Chain</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">ChainId</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// hex encoded string, eg &#39;0x1&#39; for Ethereum Mainnet</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">namespace</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">evm</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// string indicating chain namespace. Defaults to &#39;evm&#39; but will allow other chain namespaces in the future</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// used for network requests</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// used for display, eg Ethereum Mainnet</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">TokenSymbol</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// the native token symbol, eg ETH, BNB, MATIC</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">color</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// the color used to represent the chain and will be used as a background for the icon</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// the icon to represent the chain</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">publicRpcUrl</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// an optional public RPC used when adding a new chain config to the wallet</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">blockExplorerUrl</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// also used when adding a new config to the wallet</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),bs=new v({props:{code:"appMetadata"}}),hs=new z({props:{lang:"typescript",ext:"ts",linesCount:23,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AppMetadata</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// app name</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// SVG icon string, with height or width (whichever is larger) set to 100% or a valid image URL</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// note: if using an emoji make sure to send base64 string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// Optional wide format logo (ie icon and text) to be displayed in the sidebar of connect modal. Defaults to icon if not provided</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">logo</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// description of app</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">description</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// url to a getting started guide for app</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">gettingStartedGuide</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// url that points to more information about app</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">explore</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #89DDFF">  </span><span style="color: #464B5D; font-style: italic">// if your app only supports injected wallets and when no injected wallets detected, recommend the user to install some</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">recommendedInjectedWallets</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">RecommendedInjectedWallets</span><span style="color: #A6ACCD">[]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">RecommendedInjectedWallets</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// display name</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">url</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// link to download wallet</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),gs=new v({props:{code:"i18n"}}),ws=new v({props:{code:"en"}}),Bs=new z({props:{lang:"typescript",ext:"ts",linesCount:3,code:`<pre><code><span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Locale</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// eg &#39;en&#39;, &#39;es&#39;</span></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">i18nOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Record</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">Locale</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">i18n</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),os=new ys({props:{href:"https://github.com/blocknative/web3-onboard/blob/v2-web3-onboard-develop/packages/core/src/i18n/en.json",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Va]},$$scope:{ctx:h}}}),es=new ys({props:{href:"https://formatjs.io/docs/core-concepts/icu-syntax/",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Ya]},$$scope:{ctx:h}}}),vs=new v({props:{code:"accountCenter"}}),ks=new z({props:{lang:"typescript",ext:"ts",linesCount:15,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenter</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">position</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenterPosition</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// default: &#39;topRight&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">expanded</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// default: true</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">minimal</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// enabled by default for mobile</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">containerElement</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// defines the DOM container element for svelte to attach</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenterOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">desktop</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Omit</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">AccountCenter</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">expanded</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">mobile</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Omit</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">AccountCenter</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">expanded</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">AccountCenterPosition</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomLeft</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topLeft</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span></code></pre>`}}),_s=new v({props:{code:"notify"}}),xs=new v({props:{code:"enabled"}}),Is=new v({props:{code:"transactionHandler"}}),js=new v({props:{code:"transactionHandler"}}),Ts=new v({props:{code:"Notification"}}),Ns=new v({props:{code:"Notification.message"}}),Rs=new v({props:{code:"Notification.eventCode"}}),ps=new ys({props:{href:"https://github.com/blocknative/web3-onboard/blob/v2-web3-onboard-develop/packages/core/src/i18n/en.json",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Ka]},$$scope:{ctx:h}}}),Ps=new v({props:{code:"Notification.type"}}),zs=new v({props:{code:"NotificationType"}}),Ss=new v({props:{code:"Notification.autoDismiss"}}),Ms=new v({props:{code:"0"}}),Ls=new v({props:{code:"Notification.link"}}),Us=new v({props:{code:"Notification.onClick()"}}),Hs=new v({props:{code:"--onboard-grey-600"}}),qs=new v({props:{code:"--notify-onboard-grey-600"}}),Gs=new z({props:{lang:"javascript",ext:"js",linesCount:8,code:`<pre><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> wallets </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> onboard</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">state</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">select</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">notifications</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> unsubscribe </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> wallets</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">subscribe</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">update</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">transaction notifications: </span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> update)</span></span>
<span class="line"><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic">// unsubscribe when updates are no longer needed</span></span>
<span class="line"><span style="color: #82AAFF">unsubscribe</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span></code></pre>`}}),Ws=new z({props:{lang:"typescript",ext:"ts",linesCount:58,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">NotifyOptions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">desktop</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notify</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">mobile</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notify</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notify</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// default: true</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #464B5D; font-style: italic">/**</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * Callback that receives all transaction events</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * Return a custom notification based on the event</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * Or return false to disable notification for this event</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   * Or return undefined for a default notification</span></span>
<span class="line"><span style="color: #464B5D; font-style: italic">   */</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">transactionHandler</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">event</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">EthereumTransactionData</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">TransactionHandlerReturn</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CommonPositions</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CommonPositions</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomLeft</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topLeft</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">TransactionHandlerReturn</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNotification</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">boolean</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNotification</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Partial</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">Omit</span><span style="color: #89DDFF">&lt;</span><span style="color: #FFCB6B">Notification</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">id</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">startTime</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">&gt;&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Notification</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">key</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">type</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">NotificationType</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">network</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Network</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">startTime</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">eventCode</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">message</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">autoDismiss</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">number</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">link</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">string</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">onClick</span><span style="color: #89DDFF">?:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">event</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Event</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">NotificationType</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">pending</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">error</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">hint</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">declare</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Network</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">main</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">testnet</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ropsten</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">rinkeby</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">goerli</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">kovan</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">xdai</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bsc-main</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">matic-main</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">fantom-main</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">matic-mumbai</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">local</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">interface</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">UpdateNotification</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">notificationObject</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">CustomNotification</span><span style="color: #89DDFF">):</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">dismiss</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">void</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">update</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">UpdateNotification</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>`}}),cs=new ys({props:{class:"header-anchor",href:"#initialization-example","aria-hidden":"true",$$slots:{default:[Ja]},$$scope:{ctx:h}}}),Vs=new z({props:{lang:"typescript",ext:"ts",linesCount:121,code:`<pre><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Onboard </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/core</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> injectedModule </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@web3-onboard/injected-wallets</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> injected </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">injectedModule</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> onboard </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Onboard</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">wallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [injected]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">chains</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://mainnet.infura.io/v3/{INFURA_ID}</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x3</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">tROP</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Ropsten Testnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://ropsten.infura.io/v3/{INFURA_ID}</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x4</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">rETH</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Ethereum Rinkeby Testnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://rinkeby.infura.io/v3/{INFURA_ID}</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x38</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">BNB</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Binance Smart Chain</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://bsc-dataseed.binance.org/</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0x89</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">MATIC</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Matic Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://matic-mainnet.chainstacklabs.com</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0xfa</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">FTM</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">label</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Fantom Mainnet</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">rpcUrl</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://rpc.ftm.tools/</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  ]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">appMetadata</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Token Swap</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> myIcon</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// svg string icon</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">logo</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> myLogo</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #464B5D; font-style: italic">// svg string logo</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">description</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Swap tokens for other tokens</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">recommendedInjectedWallets</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">MetaMask</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">url</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://metamask.io</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Coinbase</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">url</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://wallet.coinbase.com/</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    ]</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">apiKey</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">xxx387fb-bxx1-4xxc-a0x3-9d37e426xxxx</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">  notify: </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">desktop</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #82AAFF">transactionHandler</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> transaction </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">transaction</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">transaction</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">eventCode</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">txPool</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">          </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            type</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            message</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Your transaction from #1 DApp is in the mempool</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">          </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">bottomLeft</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">mobile</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #82AAFF">transactionHandler</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> transaction </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">transaction</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">transaction</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">eventCode</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">txPool</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">          </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            type</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            message</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Your transaction from #1 DApp is in the mempool</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">          </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">accountCenter</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">desktop</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">minimal</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">mobile</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">position</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">topRight</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">enabled</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">minimal</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">i18n</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">en</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">connect</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">selectingWallet</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">header</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">custom text header</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">notify</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">transaction</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #F07178">txStuck</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">custom text for this notification event</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">watched</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">          </span><span style="color: #464B5D; font-style: italic">// Any words in brackets can be re-ordered or removed to fit your dapps desired verbiage</span></span>
<span class="line"><span style="color: #A6ACCD">          </span><span style="color: #89DDFF">&quot;</span><span style="color: #F07178">txPool</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Your account is {verb} {formattedValue} {asset} {preposition} {counterpartyShortened}</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">es</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #F07178">transaction</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">txRequest</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Su transacci\xF3n est\xE1 esperando que confirme</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>`}}),{c(){n=d("h1"),l=c("@web3-onboard/core"),o=u(),g=d("p"),t=c("This is the core package that contains all of the UI and logic to be able to seamlessly connect user's wallets to your app and track the state of those wallets. Onboard no longer contains any wallet specific code, so wallets need to be passed in upon initialization."),w=u(),B=d("h2"),y(k.$$.fragment),N=c(" Install"),Z=u(),M=d("p"),L=c("Install the core module:"),U=u(),y(O.$$.fragment),ss=u(),H=d("p"),q=c("If you would like to support all wallets, then you can install all of the wallet modules:"),G=u(),y(R.$$.fragment),ns=u(),y(T.$$.fragment),_=u(),E=d("h2"),y(j.$$.fragment),W=c(" Initialization"),as=u(),K=d("p"),is=c("Onboard needs to be initialized with an options object before the API can be used:"),Fs=u(),y(Cs.$$.fragment),J=d("h3"),y(ls.$$.fragment),zn=c(" Options"),bn=u(),As=d("p"),pn=d("strong"),y(fs.$$.fragment),Sn=c(`
An array of wallet modules that you would like to be presented to the user to select from when connecting a wallet. A wallet module is an abstraction that allows for easy interaction without needing to know the specifics of how that wallet works and are separate packages that can be included.`),hn=u(),ds=d("p"),tn=d("strong"),y($s.$$.fragment),Mn=c(`
An array of Chains that your app supports:`),gn=u(),y(ms.$$.fragment),us=d("p"),rn=d("strong"),y(bs.$$.fragment),Ln=c(`
An object that defines your app:`),wn=u(),y(hs.$$.fragment),Q=d("p"),cn=d("strong"),y(gs.$$.fragment),Un=c(`
An object that defines the display text for different locales. Can also be used to override the default text. To override the default text, pass in a object for the `),y(ws.$$.fragment),Hn=c(" locale."),Bn=u(),y(Bs.$$.fragment),V=d("p"),qn=c("To see a list of all of the text values that can be internationalized or replaced, check out the "),y(os.$$.fragment),Gn=c(`.
Onboard is using the `),y(es.$$.fragment),Wn=c(" for formatting under the hood."),En=u(),Es=d("p"),Dn=d("strong"),y(vs.$$.fragment),Vn=c(`
An object that defines whether the account center UI (default and minimal) is enabled and it's position on the screen. Currently the account center is enabled for both desktop and mobile devices.`),vn=u(),y(ks.$$.fragment),I=d("p"),yn=d("strong"),y(_s.$$.fragment),Yn=c(`
Notify provides by default transaction notifications for all connected wallets on the current blockchain. When switching chains the previous chain listeners remain active for 60 seconds to allow capture and report of an remaining transactions that may be in flight.
By default transaction notifications are captured if a DAppID is provided in the Onboard config along with the Account Center being enabled.
An object that defines whether transaction notifications will display (defaults to true if an API key is provided). This object contains an `),y(xs.$$.fragment),Kn=c(" flag prop and an optional "),y(Is.$$.fragment),Jn=c(` which is a callback that can disable or allow customizations of notifications.
Currently notifications are positioned in the same location as the account center (either below, if the Account Center is positioned along the top, or above if positioned on the bottom of the view).
The `),y(js.$$.fragment),Qn=c(" can react off any property of the Ethereum TransactionData returned to the callback from the event (see console.log in example init). In turn, it can return a Custom "),y(Ts.$$.fragment),Xn=c(" object to define the verbiage, styling, or add functionality:"),kn=u(),x=d("ul"),Ys=d("li"),y(Ns.$$.fragment),Zn=c(" - to completely customize the message shown"),sa=u(),Os=d("li"),y(Rs.$$.fragment),na=c(" - handle codes in your own way - see codes here under the notify prop "),y(ps.$$.fragment),aa=u(),ts=d("li"),y(Ps.$$.fragment),la=c(" - icon type displayed (see "),y(zs.$$.fragment),oa=c(" below for options)"),ea=u(),rs=d("li"),y(Ss.$$.fragment),pa=c(" - time (in ms) after which the notification will be dismissed. If set to "),y(Ms.$$.fragment),ta=c(" the notification will remain on screen until the user dismisses the notification, refreshes the page or navigates away from the site with the notifications"),ra=u(),Ks=d("li"),y(Ls.$$.fragment),ca=c(" - add link to the transaction hash. For instance, a link to the transaction on etherscan"),Da=u(),Js=d("li"),y(Us.$$.fragment),ya=c(" - onClick handler for when user clicks the notification element"),_n=u(),Y=d("p"),ia=c("Notify can also be styled by using the CSS variables found below. These are setup to allow maximum customization with base styling variables setting the global theme (i.e. "),y(Hs.$$.fragment),Fa=c(") along with more precise component level styling variables available ("),y(qs.$$.fragment),Ca=c(") with the latter taking precedent if defined"),xn=u(),Qs=d("p"),Aa=c("If notifications are enabled the notifications can be handled through onboard app state as seen below."),In=u(),y(Gs.$$.fragment),y(Ws.$$.fragment),X=d("h3"),y(cs.$$.fragment),fa=c(" Initialization Example"),jn=u(),Xs=d("p"),da=c("Putting it all together, here is an example initialization with the injected wallet modules:"),Tn=u(),y(Vs.$$.fragment),this.h()},l(s){n=$(s,"H1",{});var e=m(n);l=D(e,"@web3-onboard/core"),e.forEach(a),o=b(s),g=$(s,"P",{});var Fn=m(g);t=D(Fn,"This is the core package that contains all of the UI and logic to be able to seamlessly connect user's wallets to your app and track the state of those wallets. Onboard no longer contains any wallet specific code, so wallets need to be passed in upon initialization."),Fn.forEach(a),w=b(s),B=$(s,"H2",{id:!0,tabindex:!0});var Zs=m(B);i(k.$$.fragment,Zs),N=D(Zs," Install"),Zs.forEach(a),Z=b(s),M=$(s,"P",{});var Cn=m(M);L=D(Cn,"Install the core module:"),Cn.forEach(a),U=b(s),i(O.$$.fragment,s),ss=b(s),H=$(s,"P",{});var An=m(H);q=D(An,"If you would like to support all wallets, then you can install all of the wallet modules:"),An.forEach(a),G=b(s),i(R.$$.fragment,s),ns=b(s),i(T.$$.fragment,s),_=b(s),E=$(s,"H2",{id:!0,tabindex:!0});var sn=m(E);i(j.$$.fragment,sn),W=D(sn," Initialization"),sn.forEach(a),as=b(s),K=$(s,"P",{});var fn=m(K);is=D(fn,"Onboard needs to be initialized with an options object before the API can be used:"),fn.forEach(a),Fs=b(s),i(Cs.$$.fragment,s),J=$(s,"H3",{id:!0,tabindex:!0});var nn=m(J);i(ls.$$.fragment,nn),zn=D(nn," Options"),nn.forEach(a),bn=b(s),As=$(s,"P",{});var an=m(As);pn=$(an,"STRONG",{});var dn=m(pn);i(fs.$$.fragment,dn),dn.forEach(a),Sn=D(an,`
An array of wallet modules that you would like to be presented to the user to select from when connecting a wallet. A wallet module is an abstraction that allows for easy interaction without needing to know the specifics of how that wallet works and are separate packages that can be included.`),an.forEach(a),hn=b(s),ds=$(s,"P",{});var ln=m(ds);tn=$(ln,"STRONG",{});var wa=m(tn);i($s.$$.fragment,wa),wa.forEach(a),Mn=D(ln,`
An array of Chains that your app supports:`),ln.forEach(a),gn=b(s),i(ms.$$.fragment,s),us=$(s,"P",{});var $a=m(us);rn=$($a,"STRONG",{});var Ba=m(rn);i(bs.$$.fragment,Ba),Ba.forEach(a),Ln=D($a,`
An object that defines your app:`),$a.forEach(a),wn=b(s),i(hs.$$.fragment,s),Q=$(s,"P",{});var $n=m(Q);cn=$($n,"STRONG",{});var Ea=m(cn);i(gs.$$.fragment,Ea),Ea.forEach(a),Un=D($n,`
An object that defines the display text for different locales. Can also be used to override the default text. To override the default text, pass in a object for the `),i(ws.$$.fragment,$n),Hn=D($n," locale."),$n.forEach(a),Bn=b(s),i(Bs.$$.fragment,s),V=$(s,"P",{});var on=m(V);qn=D(on,"To see a list of all of the text values that can be internationalized or replaced, check out the "),i(os.$$.fragment,on),Gn=D(on,`.
Onboard is using the `),i(es.$$.fragment,on),Wn=D(on," for formatting under the hood."),on.forEach(a),En=b(s),Es=$(s,"P",{});var ma=m(Es);Dn=$(ma,"STRONG",{});var va=m(Dn);i(vs.$$.fragment,va),va.forEach(a),Vn=D(ma,`
An object that defines whether the account center UI (default and minimal) is enabled and it's position on the screen. Currently the account center is enabled for both desktop and mobile devices.`),ma.forEach(a),vn=b(s),i(ks.$$.fragment,s),I=$(s,"P",{});var S=m(I);yn=$(S,"STRONG",{});var ka=m(yn);i(_s.$$.fragment,ka),ka.forEach(a),Yn=D(S,`
Notify provides by default transaction notifications for all connected wallets on the current blockchain. When switching chains the previous chain listeners remain active for 60 seconds to allow capture and report of an remaining transactions that may be in flight.
By default transaction notifications are captured if a DAppID is provided in the Onboard config along with the Account Center being enabled.
An object that defines whether transaction notifications will display (defaults to true if an API key is provided). This object contains an `),i(xs.$$.fragment,S),Kn=D(S," flag prop and an optional "),i(Is.$$.fragment,S),Jn=D(S,` which is a callback that can disable or allow customizations of notifications.
Currently notifications are positioned in the same location as the account center (either below, if the Account Center is positioned along the top, or above if positioned on the bottom of the view).
The `),i(js.$$.fragment,S),Qn=D(S," can react off any property of the Ethereum TransactionData returned to the callback from the event (see console.log in example init). In turn, it can return a Custom "),i(Ts.$$.fragment,S),Xn=D(S," object to define the verbiage, styling, or add functionality:"),S.forEach(a),kn=b(s),x=$(s,"UL",{});var P=m(x);Ys=$(P,"LI",{});var ua=m(Ys);i(Ns.$$.fragment,ua),Zn=D(ua," - to completely customize the message shown"),ua.forEach(a),sa=b(P),Os=$(P,"LI",{});var On=m(Os);i(Rs.$$.fragment,On),na=D(On," - handle codes in your own way - see codes here under the notify prop "),i(ps.$$.fragment,On),On.forEach(a),aa=b(P),ts=$(P,"LI",{});var mn=m(ts);i(Ps.$$.fragment,mn),la=D(mn," - icon type displayed (see "),i(zs.$$.fragment,mn),oa=D(mn," below for options)"),mn.forEach(a),ea=b(P),rs=$(P,"LI",{});var un=m(rs);i(Ss.$$.fragment,un),pa=D(un," - time (in ms) after which the notification will be dismissed. If set to "),i(Ms.$$.fragment,un),ta=D(un," the notification will remain on screen until the user dismisses the notification, refreshes the page or navigates away from the site with the notifications"),un.forEach(a),ra=b(P),Ks=$(P,"LI",{});var ba=m(Ks);i(Ls.$$.fragment,ba),ca=D(ba," - add link to the transaction hash. For instance, a link to the transaction on etherscan"),ba.forEach(a),Da=b(P),Js=$(P,"LI",{});var ha=m(Js);i(Us.$$.fragment,ha),ya=D(ha," - onClick handler for when user clicks the notification element"),ha.forEach(a),P.forEach(a),_n=b(s),Y=$(s,"P",{});var en=m(Y);ia=D(en,"Notify can also be styled by using the CSS variables found below. These are setup to allow maximum customization with base styling variables setting the global theme (i.e. "),i(Hs.$$.fragment,en),Fa=D(en,") along with more precise component level styling variables available ("),i(qs.$$.fragment,en),Ca=D(en,") with the latter taking precedent if defined"),en.forEach(a),xn=b(s),Qs=$(s,"P",{});var _a=m(Qs);Aa=D(_a,"If notifications are enabled the notifications can be handled through onboard app state as seen below."),_a.forEach(a),In=b(s),i(Gs.$$.fragment,s),i(Ws.$$.fragment,s),X=$(s,"H3",{id:!0,tabindex:!0});var ga=m(X);i(cs.$$.fragment,ga),fa=D(ga," Initialization Example"),ga.forEach(a),jn=b(s),Xs=$(s,"P",{});var xa=m(Xs);da=D(xa,"Putting it all together, here is an example initialization with the injected wallet modules:"),xa.forEach(a),Tn=b(s),i(Vs.$$.fragment,s),this.h()},h(){Ds(B,"id","install"),Ds(B,"tabindex","-1"),Ds(E,"id","initialization"),Ds(E,"tabindex","-1"),Ds(J,"id","options"),Ds(J,"tabindex","-1"),Ds(X,"id","initialization-example"),Ds(X,"tabindex","-1")},m(s,e){r(s,n,e),p(n,l),r(s,o,e),r(s,g,e),p(g,t),r(s,w,e),r(s,B,e),F(k,B,null),p(B,N),r(s,Z,e),r(s,M,e),p(M,L),r(s,U,e),F(O,s,e),r(s,ss,e),r(s,H,e),p(H,q),r(s,G,e),F(R,s,e),r(s,ns,e),F(T,s,e),r(s,_,e),r(s,E,e),F(j,E,null),p(E,W),r(s,as,e),r(s,K,e),p(K,is),r(s,Fs,e),F(Cs,s,e),r(s,J,e),F(ls,J,null),p(J,zn),r(s,bn,e),r(s,As,e),p(As,pn),F(fs,pn,null),p(As,Sn),r(s,hn,e),r(s,ds,e),p(ds,tn),F($s,tn,null),p(ds,Mn),r(s,gn,e),F(ms,s,e),r(s,us,e),p(us,rn),F(bs,rn,null),p(us,Ln),r(s,wn,e),F(hs,s,e),r(s,Q,e),p(Q,cn),F(gs,cn,null),p(Q,Un),F(ws,Q,null),p(Q,Hn),r(s,Bn,e),F(Bs,s,e),r(s,V,e),p(V,qn),F(os,V,null),p(V,Gn),F(es,V,null),p(V,Wn),r(s,En,e),r(s,Es,e),p(Es,Dn),F(vs,Dn,null),p(Es,Vn),r(s,vn,e),F(ks,s,e),r(s,I,e),p(I,yn),F(_s,yn,null),p(I,Yn),F(xs,I,null),p(I,Kn),F(Is,I,null),p(I,Jn),F(js,I,null),p(I,Qn),F(Ts,I,null),p(I,Xn),r(s,kn,e),r(s,x,e),p(x,Ys),F(Ns,Ys,null),p(Ys,Zn),p(x,sa),p(x,Os),F(Rs,Os,null),p(Os,na),F(ps,Os,null),p(x,aa),p(x,ts),F(Ps,ts,null),p(ts,la),F(zs,ts,null),p(ts,oa),p(x,ea),p(x,rs),F(Ss,rs,null),p(rs,pa),F(Ms,rs,null),p(rs,ta),p(x,ra),p(x,Ks),F(Ls,Ks,null),p(Ks,ca),p(x,Da),p(x,Js),F(Us,Js,null),p(Js,ya),r(s,_n,e),r(s,Y,e),p(Y,ia),F(Hs,Y,null),p(Y,Fa),F(qs,Y,null),p(Y,Ca),r(s,xn,e),r(s,Qs,e),p(Qs,Aa),r(s,In,e),F(Gs,s,e),F(Ws,s,e),r(s,X,e),F(cs,X,null),p(X,fa),r(s,jn,e),r(s,Xs,e),p(Xs,da),r(s,Tn,e),F(Vs,s,e),Nn=!0},p(s,[e]){const Fn={};e&1&&(Fn.$$scope={dirty:e,ctx:s}),k.$set(Fn);const Zs={};e&1&&(Zs.$$scope={dirty:e,ctx:s}),O.$set(Zs);const Cn={};e&1&&(Cn.$$scope={dirty:e,ctx:s}),R.$set(Cn);const An={};e&1&&(An.$$scope={dirty:e,ctx:s}),T.$set(An);const sn={};e&1&&(sn.$$scope={dirty:e,ctx:s}),j.$set(sn);const fn={};e&1&&(fn.$$scope={dirty:e,ctx:s}),ls.$set(fn);const nn={};e&1&&(nn.$$scope={dirty:e,ctx:s}),os.$set(nn);const an={};e&1&&(an.$$scope={dirty:e,ctx:s}),es.$set(an);const dn={};e&1&&(dn.$$scope={dirty:e,ctx:s}),ps.$set(dn);const ln={};e&1&&(ln.$$scope={dirty:e,ctx:s}),cs.$set(ln)},i(s){Nn||(C(k.$$.fragment,s),C(O.$$.fragment,s),C(R.$$.fragment,s),C(T.$$.fragment,s),C(j.$$.fragment,s),C(Cs.$$.fragment,s),C(ls.$$.fragment,s),C(fs.$$.fragment,s),C($s.$$.fragment,s),C(ms.$$.fragment,s),C(bs.$$.fragment,s),C(hs.$$.fragment,s),C(gs.$$.fragment,s),C(ws.$$.fragment,s),C(Bs.$$.fragment,s),C(os.$$.fragment,s),C(es.$$.fragment,s),C(vs.$$.fragment,s),C(ks.$$.fragment,s),C(_s.$$.fragment,s),C(xs.$$.fragment,s),C(Is.$$.fragment,s),C(js.$$.fragment,s),C(Ts.$$.fragment,s),C(Ns.$$.fragment,s),C(Rs.$$.fragment,s),C(ps.$$.fragment,s),C(Ps.$$.fragment,s),C(zs.$$.fragment,s),C(Ss.$$.fragment,s),C(Ms.$$.fragment,s),C(Ls.$$.fragment,s),C(Us.$$.fragment,s),C(Hs.$$.fragment,s),C(qs.$$.fragment,s),C(Gs.$$.fragment,s),C(Ws.$$.fragment,s),C(cs.$$.fragment,s),C(Vs.$$.fragment,s),Nn=!0)},o(s){A(k.$$.fragment,s),A(O.$$.fragment,s),A(R.$$.fragment,s),A(T.$$.fragment,s),A(j.$$.fragment,s),A(Cs.$$.fragment,s),A(ls.$$.fragment,s),A(fs.$$.fragment,s),A($s.$$.fragment,s),A(ms.$$.fragment,s),A(bs.$$.fragment,s),A(hs.$$.fragment,s),A(gs.$$.fragment,s),A(ws.$$.fragment,s),A(Bs.$$.fragment,s),A(os.$$.fragment,s),A(es.$$.fragment,s),A(vs.$$.fragment,s),A(ks.$$.fragment,s),A(_s.$$.fragment,s),A(xs.$$.fragment,s),A(Is.$$.fragment,s),A(js.$$.fragment,s),A(Ts.$$.fragment,s),A(Ns.$$.fragment,s),A(Rs.$$.fragment,s),A(ps.$$.fragment,s),A(Ps.$$.fragment,s),A(zs.$$.fragment,s),A(Ss.$$.fragment,s),A(Ms.$$.fragment,s),A(Ls.$$.fragment,s),A(Us.$$.fragment,s),A(Hs.$$.fragment,s),A(qs.$$.fragment,s),A(Gs.$$.fragment,s),A(Ws.$$.fragment,s),A(cs.$$.fragment,s),A(Vs.$$.fragment,s),Nn=!1},d(s){s&&a(n),s&&a(o),s&&a(g),s&&a(w),s&&a(B),f(k),s&&a(Z),s&&a(M),s&&a(U),f(O,s),s&&a(ss),s&&a(H),s&&a(G),f(R,s),s&&a(ns),f(T,s),s&&a(_),s&&a(E),f(j),s&&a(as),s&&a(K),s&&a(Fs),f(Cs,s),s&&a(J),f(ls),s&&a(bn),s&&a(As),f(fs),s&&a(hn),s&&a(ds),f($s),s&&a(gn),f(ms,s),s&&a(us),f(bs),s&&a(wn),f(hs,s),s&&a(Q),f(gs),f(ws),s&&a(Bn),f(Bs,s),s&&a(V),f(os),f(es),s&&a(En),s&&a(Es),f(vs),s&&a(vn),f(ks,s),s&&a(I),f(_s),f(xs),f(Is),f(js),f(Ts),s&&a(kn),s&&a(x),f(Ns),f(Rs),f(ps),f(Ps),f(zs),f(Ss),f(Ms),f(Ls),f(Us),s&&a(_n),s&&a(Y),f(Hs),f(qs),s&&a(xn),s&&a(Qs),s&&a(In),f(Gs,s),f(Ws,s),s&&a(X),f(cs),s&&a(jn),s&&a(Xs),s&&a(Tn),f(Vs,s)}}}class rl extends ja{constructor(n){super(),Ta(this,n,null,Qa,Na,{})}}export{rl as default};
